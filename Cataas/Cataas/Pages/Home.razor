@using Services
@using Model
@page "/"

<PageTitle>Cataas</PageTitle>

<div class="d-flex justify-content-center">
    <h1>Cat As A Service</h1>
</div>

<div class="d-flex justify-content-center">
  
    @if (link == null)
    {
        <img src="@Placeholder" height="500" width="500" class="border border-4" />
        <br />
    }
    else
    {
        <img src="@link" height="500" width="500" class="border border-black" />
        <br />
    }

   
</div>
<div class="d-flex justify-content-center">
<button type="button" class="btn btn-primary btn-lg m-3" @onclick="@GeneratePic">Generate Picture</button>
</div>

<div class="d-flex justify-content-center">
    <select class="form-select form-select-lg mb-3 w-50" aria-label="Large select example"
            @onchange="SelectedChoiceChanged">
        <option value="standard">Standard</option>
        <option value="mono">Mono</option>
        <option value="negate">Negate</option>
        <option value="custom">Custom</option>
    </select>
</div>

@if (choice == "custom")
{
    if(CustomChoice == "")
    {
        <div class="d-flex justify-content-center">
            <select class="form-select form-select-lg mb-3 w-25" aria-label="Large select example"
                    @onchange="SelectedCustomChanged">
                <option value="standard">Choose</option>
                <option value="BSH">BSH</option>
                <option value="RGB">RGB</option>
                <option value="custom text">Add Caption</option>

            </select>
        </div>
    }

    <!--BSH-->
    if(CustomChoice == "BSH")
    {
        <!--Brightness-->
        <label for="customRangeBrightness" class="form-label d-flex justify-content-center">Brightness</label>
        <div class="d-flex justify-content-center">
            <input type="range" class="form-range w-75" id="customRangeBrightness" min="0" max="100" @bind-value="@brightnessValue" >
        </div>
        <label class="d-flex justify-content-center" for="customRangeBrightness">@brightnessValue</label>
        <br />

        <!--Saturation-->
        <label for="customRangeSaturation" class="form-label d-flex justify-content-center">Saturation</label>
        <div class="d-flex justify-content-center">
        <input type="range" class="form-range w-75" id="customRangeSaturation" min="0" max="100" @bind-value="@saturationValue">
        </div>
        <label class="d-flex justify-content-center" for="customRangeSaturation">@saturationValue</label>
        <br />

        <!--Hue-->
        <label for="customRangeHue" class="form-label d-flex justify-content-center">Hue</label>
        <div class="d-flex justify-content-center">
        <input type="range" class="form-range w-75" id="customRangeHue" min="0" max="180" @bind-value="@hueValue">
        </div>
        <label class="d-flex justify-content-center" for="customRangeHue">@hueValue</label>
        <br />

        <div class="d-flex justify-content-center">
            <button type="button" class="btn btn-outline-success m-3" @onclick="@OnClickSaveBSH">Save</button>
        </div>

        <div class="d-flex justify-content-center">
            <button type="button" class="btn btn-outline-danger" @onclick="@OnClickReset">Reset</button>
        </div>


        <br />
    }


    <!--Coloring-->
    if(CustomChoice == "RGB")
    {
        <!--Red-->
        <label for="customRangeRed" class="form-label d-flex justify-content-center">Red</label>
        <div class="d-flex justify-content-center">
            <input type="range" class="form-range w-75" id="customRangeRed" min="0" max="255" @bind-value="@RedValue">
        </div>
        <label for="customRangeBrightness" class="d-flex justify-content-center">@RedValue</label>
        <br />

        <!--Green-->
        <label for="customRangeGreen" class="form-label d-flex justify-content-center">Green</label>
        <div class="d-flex justify-content-center">
            <input type="range" class="form-range w-75" id="customRangeGreen" min="0" max="255" @bind-value="@GreenValue">
        </div>
        <label for="customRangeSaturation" class="d-flex justify-content-center">@GreenValue</label>
        <br />

        <!--Blue-->
        <label for="customRangeBlue" class="form-label d-flex justify-content-center">Blue</label>
        <div class="d-flex justify-content-center">
            <input type="range" class="form-range w-75" id="customRangeBlue" min="0" max="255" @bind-value="@BlueValue">
       </div>
        <label class="d-flex justify-content-center" for="customRangeBrightness">@BlueValue</label>
        <br />



        <div class="d-flex justify-content-center">
            <button type="button" class="btn btn-outline-success m-3" @onclick="@OnClickSaveRGB">Save</button>
        </div>

        <div class="d-flex justify-content-center">
            <button type="button" class="btn btn-outline-danger" @onclick="@OnClickReset">Reset</button>
        </div>
        <br />
    }


    @if (CustomChoice == "custom text")
    {
      <div class="d-flex justify-content-center">
      <label>What should the caption be?</label>
      </div>


      <div class="d-flex justify-content-center">
            <div class="w-50 p-3">
                <div class="input-group mb-3">
                    <span class="input-group-text" id="inputGroup-sizing-default">Text</span>
                    <input type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-default" @bind-value="@text">
                </div>
            </div>
      </div>
      
      <div class="d-flex justify-content-center">
         <button type="button" class="btn btn-outline-danger" @onclick="@OnClickReset">Reset</button>
      </div>
    }
}


<!-- <img src="https://cataas.com/cat?filter=custom&hue=50" /> -->
@code {
    API api = new();

    private string Placeholder = "https://www.brillen-sehhilfen.de/optik/image/weiss-white.png";

    public string choice = "standard";
    public string CustomChoice = "";

    public int? brightnessValue = 0;
    public int? saturationValue = 0;
    public int? hueValue = 0;

    public int? RedValue = 0;
    public int? GreenValue = 0;
    public int? BlueValue = 0;

    public string? text;

    public string baseAddress = "";

    Cat? picture;
    string? link = null;

    public void SelectedChoiceChanged(ChangeEventArgs e)
    {
        if (e.Value is not null)
        {
            choice = (string)e.Value;
        }
    }

    public void SelectedCustomChanged(ChangeEventArgs e)
    {
        if (e.Value is not null)
        {
            CustomChoice = (string)e.Value;
        }
    }

    public async void OnClickSaveBSH()
    {
        RedValue = null;
        GreenValue = null;
        BlueValue = null;

        await GeneratePic();
    }

    public async void OnClickSaveRGB()
    {
        brightnessValue = null;
        saturationValue = null;
        hueValue = null;

        await GeneratePic();
    }

    public void OnClickReset()
    {
        CustomChoice = "";

        brightnessValue = 0;
        saturationValue = 0;
        hueValue = 0;

        RedValue = 0;
        GreenValue = 0;
        BlueValue = 0;

        text = null;
    }

    public async Task GeneratePic()
    {

        baseAddress = "https://cataas.com/cat/";

        picture = await api.GetCat();

        string catsays = $"/says/{text}";

        baseAddress += picture.ID;
 
        if (picture == null)
        {
            Console.WriteLine("it no no wanna work");
        }


        if (choice == "custom")
        {
            if (RedValue == null || GreenValue == null || BlueValue == null)
            {
                link = $"{baseAddress}?filter={choice}&brightness={brightnessValue}&saturation={saturationValue}&hue={hueValue}";
            }
            else if (brightnessValue == null || saturationValue == null || hueValue == null)
            {
                link = $"{baseAddress}?filter={choice}&r={RedValue}&g={GreenValue}&b={BlueValue}";
            }
            else if (text is not null)
            {
                link = $"{baseAddress}{catsays}?fontColor=%23FFF?fontBackground=1";
            }
            else
            {
                link = $"{baseAddress}";
            }
        }
        else if (choice == "mono" || choice == "negate")
        {
            link = $"{baseAddress}?filter={choice}";
        }
        else
        {
            link = $"{baseAddress}";
        }
    }
}
